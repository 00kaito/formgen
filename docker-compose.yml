version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: formbuilder
      POSTGRES_USER: formbuilder_user
      POSTGRES_PASSWORD: formbuilder_password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U formbuilder_user -d formbuilder"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Form Builder Application
  app:
    build: .
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgres://formbuilder_user:formbuilder_password123@postgres:5432/formbuilder
      SESSION_SECRET: your_secure_session_secret_change_this_in_production
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: formbuilder
      PGUSER: formbuilder_user
      PGPASSWORD: formbuilder_password123
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./form-backups:/app/form-backups
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:5000/api/auth/user').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: